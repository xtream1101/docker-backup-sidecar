# Docker Backup Sidecar Configuration
# Copy this file to .env and configure for your service

# ============================================================================
# BACKUP NAME (REQUIRED)
# ============================================================================

# Unique name for this backup - used to organize and identify backups
# Examples: myapp-prod, website-staging, api-production
BACKUP_NAME=myapp-production

# ============================================================================
# BACKUP DESTINATION - Choose local, S3, or both
# ============================================================================

# Local backup path (inside container)
# Mount this volume in docker-compose.yml to persist backups locally
# Example: - ./backups:/backups-local
BACKUP_LOCAL_PATH=/backups-local

# S3 Configuration (Optional - for cloud backups)
# If you want S3 backups, uncomment and configure these:
# BACKUP_S3_BUCKET=my-backup-bucket
# BACKUP_S3_ENDPOINT=https://s3.amazonaws.com
# BACKUP_S3_REGION=us-east-1
# BACKUP_S3_ACCESS_KEY=your-access-key
# BACKUP_S3_SECRET_KEY=your-secret-key

# Example: Backblaze B2, use:
# BACKUP_S3_ENDPOINT=https://s3.us-west-002.backblazeb2.com

# ============================================================================
# BACKUP SCHEDULE & RETENTION
# ============================================================================

# Cron schedule (default: 2 AM daily)
# Omit or comment out for manual-only mode (no automatic backups)
BACKUP_SCHEDULE="0 2 * * *"

# Grandfather-Father-Son (GFS) Retention Policy
# Keep backups in multiple tiers for long-term retention

# Recent tier: Keep the last N backups regardless of age (default: 14)
BACKUP_RETENTION_RECENT=14

# Daily tier: Keep one backup per day for N days (default: 7)
BACKUP_RETENTION_DAILY=7

# Weekly tier: Keep one backup per week for N weeks (default: 4)
BACKUP_RETENTION_WEEKLY=4

# Monthly tier: Keep one backup per month for N months (default: 0)
BACKUP_RETENTION_MONTHLY=0

# Yearly tier: Keep one backup per year for N years (default: 0)
BACKUP_RETENTION_YEARLY=0

# ============================================================================
# ENCRYPTION
# ============================================================================

# GPG encryption key (REQUIRED for security)
# Use a strong, random passphrase and store it securely!
BACKUP_ENCRYPTION_KEY=change-this-to-a-very-strong-passphrase

# ============================================================================
# WHAT TO BACKUP - Configure based on your service
# ============================================================================

# PostgreSQL Databases
# Format: Standard PostgreSQL connection URI
# postgresql://[user[:password]@][host][:port][/database][?options]
# Examples:
# BACKUP_POSTGRES=postgresql://postgres:${DB_PASSWORD}@db:5432/myapp
# BACKUP_POSTGRES=postgresql://postgres:password123@db:5432/database1
# Multiple databases (one per line in multi-line format):
# BACKUP_POSTGRES=postgresql://postgres:pass@db:5432/db1
# postgresql://postgres:pass@db:5432/db2

# MongoDB Databases
# Format: Standard MongoDB connection URI
# mongodb://[user:password@]host[:port][/database][?options]
# Use authSource query parameter for authentication database
# Examples:
# BACKUP_MONGODB=mongodb://root:${MONGO_PASSWORD}@mongo:27017/mydb?authSource=admin
# BACKUP_MONGODB=mongodb://root:password@mongo:27017/?authSource=admin
# Note: Omit database name (or use /) to backup all databases

# Directories to backup
# Format: /path:name,/path2:name2
# BACKUP_DIRS=/data:app-data,/config:app-config

# Individual files to backup
# Format: /path/file:name,/path2/file2:name2
# For SQLite databases, use BACKUP_FILES with BACKUP_STOP_SERVICES
# BACKUP_FILES=/config/app.json:config,/config/secret.key:secret,/data/app.db:database

# ============================================================================
# SERVICE MANAGEMENT
# ============================================================================

# Services/containers to stop before backup (comma-separated)
# Useful for SQLite databases or file-based databases that need exclusive access
# Use container names or compose service names
# BACKUP_STOP_SERVICES=app,worker

# Wait time after stopping services (seconds, default: 5)
# BACKUP_STOP_WAIT=5

# Wait time after starting services (seconds, default: 5)
# BACKUP_START_WAIT=5

# ============================================================================
# MONITORING & NOTIFICATIONS
# ============================================================================

# Webhook URLs for success/failure notifications
# Compatible with healthchecks.io, upptime, etc.
# BACKUP_SUCCESS_WEBHOOK=https://hc-ping.com/your-uuid
# BACKUP_FAILURE_WEBHOOK=https://hc-ping.com/your-uuid/fail

# ============================================================================
# ADVANCED OPTIONS
# ============================================================================

# Enable debug logging (default: false)
# BACKUP_DEBUG=true

# Timezone (default: UTC)
TZ=America/New_York

# ============================================================================
# EXAMPLE CONFIGURATIONS
# ============================================================================

# Example 1: Simple app with PostgreSQL + local backups
# BACKUP_LOCAL_PATH=/backups-local
# BACKUP_POSTGRES=postgresql://postgres:mypassword@db:5432/myapp
# BACKUP_DIRS=/data:app-data

# Example 2: App with SQLite (needs container stop)
# BACKUP_LOCAL_PATH=/backups-local
# BACKUP_FILES=/app/data/app.db:database
# BACKUP_DIRS=/app/uploads:uploads
# BACKUP_STOP_SERVICES=myapp
# BACKUP_STOP_WAIT=10

# Example 3: MongoDB with S3 backups only
# BACKUP_S3_BUCKET=my-backups
# BACKUP_S3_ACCESS_KEY=xxx
# BACKUP_S3_SECRET_KEY=xxx
# BACKUP_MONGODB=mongodb://root:password@mongo:27017/?authSource=admin
# BACKUP_DIRS=/uploads:uploads,/config:config

# Example 4: Dual backups (local + S3) with monitoring
# BACKUP_LOCAL_PATH=/backups-local
# BACKUP_S3_BUCKET=my-backups
# BACKUP_S3_ACCESS_KEY=xxx
# BACKUP_S3_SECRET_KEY=xxx
# BACKUP_POSTGRES=postgresql://postgres:password@db:5432/myapp
# BACKUP_DIRS=/data:app-data
# BACKUP_SUCCESS_WEBHOOK=https://hc-ping.com/your-uuid
